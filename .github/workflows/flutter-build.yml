name: Build Flutter APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.35.2'

      - name: Cache Flutter pub cache
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Validate Flutter SDK and update
        run: |
          flutter doctor
          flutter precache
          flutter upgrade

# ... 上一步是 Checkout code
      
      # 这是一个完整且独立的步骤，包含了所有依赖获取和构建命令
      - name: Build Flutter App
        run: |
          # 手动下载并设置Flutter SDK，以绕过actions缓存问题
          wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.35.2-stable.tar.xz
          tar -xf flutter_linux_3.35.2-stable.tar.xz
          
          # 将Flutter命令路径添加到当前会话的PATH中
          export PATH="$PWD/flutter/bin:$PATH"
          
          # 验证SDK安装并下载所有工具
          flutter doctor
          flutter precache

          # 获取Dart和Flutter依赖
          flutter pub get

          # 重新生成protobuf文件
          flutter pub run build_runner build

          # 构建APK
          flutter build apk --release --split-per-abi
# This is a basic workflow to help you get started with Actions

name: Build and Release

# git push --tags 执行时候进行编译
on:
  push:
    tags:
      - v*
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Setup Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with: 
            distribution: 'zulu'
            java-version: "17"
            token: ${{secrets.GITHUB_TOKEN}}

      # Setup Flutter
      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
            flutter-version: 3.35.2
            channel: stable
      
      # Create local properties
      - name: Create local properties
        run: |
          echo "sdk.dir=/usr/local/lib/android/sdk" > android/local.properties
          echo "flutter.sdk=$FLUTTER_HOME" >> android/local.properties

      # Decode keystore
      - name: Decode keystore
        run: |
          echo $ENCODED_KEYSTORE | base64 -di > android/app/keystore.jks
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE }}

      # Get dependencies
      - name: Get dependencies
        run: flutter pub get

      # Clean build
      - name: Clean build
        run: flutter clean

      # Build APK
      - name: Collect Apks
        run: flutter build apk --release --split-per-abi --android-skip-build-dependency-validation
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}

      # Upload artifacts
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apk
          path: |
            build/app/outputs/flutter-apk/*.apk
          if-no-files-found: error

      # Release installation packages (only for tags)
      - name: Release Packages
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
            artifacts: "build/app/outputs/flutter-apk/app-*.apk"
            allowUpdates: true
name: Build and Release Flutter APK

on:
  push:
    branches: [ main, master ]
    tags:
      - v*
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Cache Flutter SDK
        id: cache-flutter
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/flutter
            /home/runner/.pub-cache
          key: flutter-sdk-${{ runner.os }}-3.24.3-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            flutter-sdk-${{ runner.os }}-3.24.3-

      - name: Set up Flutter
        id: flutter-setup
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true
          cache-key: flutter-sdk-${{ runner.os }}-3.24.3
          cache-path: /home/runner/flutter

      - name: Debug Flutter installation
        run: |
          echo "Checking Flutter SDK path:"
          ls -la /home/runner/flutter || echo "Flutter SDK directory not found"
          ls -la /home/runner/flutter/bin || echo "Flutter bin directory not found"
          ls -la /home/runner/flutter/bin/cache/dart-sdk/bin/snapshots/ || echo "Snapshots directory not found"
          echo "PATH before update:"
          echo $PATH
          export PATH="/home/runner/flutter/bin:$PATH"
          echo "PATH after update:"
          echo $PATH
          echo "Flutter version:"
          /home/runner/flutter/bin/flutter --version || echo "Flutter binary not found"

      - name: Verify Flutter installation
        run: |
          export PATH="/home/runner/flutter/bin:$PATH"
          flutter doctor -v
          flutter precache --force
          flutter pub cache repair

      - name: Install dependencies
        run: |
          export PATH="/home/runner/flutter/bin:$PATH"
          flutter pub get

      - name: Accept Android licenses
        run: |
          export PATH="/home/runner/flutter/bin:$PATH"
          yes | flutter doctor --android-licenses

      - name: Clean build artifacts
        run: |
          export PATH="/home/runner/flutter/bin:$PATH"
          flutter clean

      - name: Generate protobuf files
        run: |
          export PATH="/home/runner/flutter/bin:$PATH"
          flutter pub run build_runner build --delete-conflicting-outputs --verbose

      - name: Decode keystore
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -di > android/app/keystore.jks
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE }}

      - name: Build APK
        run: |
          export PATH="/home/runner/flutter/bin:$PATH"
          flutter build apk --release --split-per-abi --verbose
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ KEY_PASSWORD }}

      - name: Upload APK (non-release)
        if: "!startsWith(github.ref, 'refs/tags/v')"
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/*.apk
          if-no-files-found: error

      - name: Release Packages
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-*.apk"
          allowUpdates: true